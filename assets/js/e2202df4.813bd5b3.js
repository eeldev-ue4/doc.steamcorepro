"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[280],{462:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>u,frontMatter:()=>a,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"docfiles/additional/incompatible_unique_net_id","title":"incompatible_unique_net_id","description":"incompatibleuniquenet_id is an error that will appear when running two different OSS (OnlineSubsystem), sometimes you might want to have a dedicated server use the regular Null OnlineSubsystem while clients use the Steam OSS (to have steam functionality on clients), you can bypass this check by overriding the \u201cPreLogin\u201d function inside your GameMode.","source":"@site/docs/docfiles/additional/incompatible_unique_net_id.md","sourceDirName":"docfiles/additional","slug":"/docfiles/additional/incompatible_unique_net_id","permalink":"/docfiles/additional/incompatible_unique_net_id","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":10,"frontMatter":{"sidebar_position":10},"sidebar":"steamCoreSidebar","previous":{"title":"Using Your Own AppId","permalink":"/docfiles/videos/using-own-appid"},"next":{"title":"Additional Logging","permalink":"/docfiles/additional/additional_logging"}}');var o=i(4848),r=i(8453);const a={sidebar_position:10},s="incompatible_unique_net_id",d={},l=[{value:"BaseGameMode.h",id:"basegamemodeh",level:2},{value:"BaseGameMode.cpp",id:"basegamemodecpp",level:2}];function c(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"incompatible_unique_net_id",children:"incompatible_unique_net_id"})}),"\n",(0,o.jsx)(n.admonition,{title:"NOTE",type:"tip",children:(0,o.jsx)(n.p,{children:"incompatible_unique_net_id is an error that will appear when running two different OSS (OnlineSubsystem), sometimes you might want to have a dedicated server use the regular Null OnlineSubsystem while clients use the Steam OSS (to have steam functionality on clients), you can bypass this check by overriding the \u201cPreLogin\u201d function inside your GameMode."})}),"\n",(0,o.jsx)(n.p,{children:"You\u2019ll have to dive into C++ to override this function as it cant be done in blueprints, but here is an example of what the two files can look like this,"}),"\n",(0,o.jsx)(n.h2,{id:"basegamemodeh",children:"BaseGameMode.h"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-cpp",children:'// Copyright (C) eelDev 2017-2021\r\n\r\n#pragma once\r\n \r\n#include "CoreMinimal.h"\r\n#include "GameFramework/GameMode.h"\r\n#include "BaseGameMode.generated.h" \r\n\r\nUCLASS()    \r\nclass ABaseGameMode : public AGameMode  \r\n{\r\n\tGENERATED_BODY()  \r\npublic:\r\n\tvirtual void PreLogin(const FString& Options, const FString& Address, const FUniqueNetIdRepl& UniqueId, FString& ErrorMessage) override;\r\n};\n'})}),"\n",(0,o.jsx)(n.h2,{id:"basegamemodecpp",children:"BaseGameMode.cpp"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-cpp",children:'// Copyright (C) eelDev 2017-2021\r\n\r\n#include "BaseGameMode.h"\r\n#include "GameFramework/GameSession.h" \r\n\r\nvoid ABaseGameMode::PreLogin(const FString& Options, const FString& Address, const FUniqueNetIdRepl& UniqueId, FString& ErrorMessage)\r\n{\r\n\t// override net id check\r\n\t\r\n\tErrorMessage = GameSession->ApproveLogin(Options);\r\n\tFGameModeEvents::GameModePreLoginEvent.Broadcast(this, UniqueId, ErrorMessage);\r\n}\n'})}),"\n",(0,o.jsx)(n.p,{children:"After creating the two files you\u2019ll need to recompile your project and re-parent your Blueprint GameMode to the \u201cBaseGameMode\u201d class."}),"\n",(0,o.jsx)(n.p,{children:"You should now be able to mix two different subsystems."})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>s});var t=i(6540);const o={},r=t.createContext(o);function a(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);